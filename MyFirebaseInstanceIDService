
public class MyFirebaseInstanceIDService extends FirebaseInstanceIdService
{
    private static final String TAG = MyFirebaseInstanceIDService.class.getSimpleName();
    SessionManager session;

    @Override
    public void onTokenRefresh() {
        super.onTokenRefresh();
        String refreshedToken = FirebaseInstanceId.getInstance().getToken();

// Saving reg id to shared preferences
        storeRegIdInPref(refreshedToken);

// sending reg id to your server
        sendRegistrationToServer(refreshedToken);

// Notify UI that registration has completed, so the progress indicator can be hidden.
        Intent registrationComplete = new Intent(Config.REGISTRATION_COMPLETE);
        registrationComplete.putExtra("token", refreshedToken);
        LocalBroadcastManager.getInstance(this).sendBroadcast(registrationComplete);
    }

    private void sendRegistrationToServer(final String token) {
// sending gcm token to server
        Log.e(TAG, "sendRegistrationToServer: " + token);

// if (!TextUtils.isEmpty(token)&& Const.isNetworkAvailable(getApplicationContext()))
// updateNotifToken(token);
// else
// Toast.makeText(getApplicationContext(), getString(R.string.firebase_reg_id_msg), Toast.LENGTH_SHORT).show();
    }

    private void storeRegIdInPref(String token) {
        SharedPreferences pref = getApplicationContext().getSharedPreferences(Config.SHARED_PREF, 0);
        SharedPreferences.Editor editor = pref.edit();
        editor.putString("regId", token);
        editor.commit();
    }

    private void updateNotifToken(final String regId){

        session = new SessionManager(getApplicationContext());

        ApiInterface apiService = ApiClient.getClient().create(ApiInterface.class);

        Call<ApiResponse> call = apiService.updateNotificationToken(User.getUserId(),regId);
        call.enqueue(new Callback<ApiResponse>() {
            @Override
            public void onResponse(Call<ApiResponse> call, Response<ApiResponse> response) {
                int statusCode = response.code();
                String msg=response.message();
                if (statusCode==200){
                    ApiResponse data = response.body();

                    int status=data.getStatus();
                    String message=data.getMessage();
                    if (status==1) {
                        session.updateToken(regId);
                    }else {
                        Toast.makeText(getApplicationContext(), message, Toast.LENGTH_LONG).show();
                    }

                }else {
                    Toast.makeText(getApplicationContext(), msg, Toast.LENGTH_SHORT).show();
                }
            }

            @Override
            public void onFailure(Call<ApiResponse> call, Throwable t) {
                Log.e(TAG, t.toString());
            }
        });
    }
}
